name: CI Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest dvc[runtime] ruff
          pip install -r requirements.txt

      - name: Run tests
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: |
          pytest tests/

      - name: Run ruff
        run: |
          ruff check .
          ruff check --fix .

  build-docker:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Build the Docker image
        run: |
        echo "${{ secrets.DOCKER_PASSWORD }}" | docker login \
            -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin docker.io
        docker build . --file Dockerfile --build-arg WANDB_API_KEY=${{ secrets.WANDB_API_KEY }}
            --tag docker.io/${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_HUB_REPOSITORY }}:$GITHUB_SHA
        docker push docker.io/${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_HUB_REPOSITORY }}:$GITHUB_SHA
  cml-run:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install dvc cml
          pip install -r requirements.txt

      - name: Run model training
        env:
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WANDB_API_KEY: ${{ secrets.WANDB_API_KEY }}
        run: |
          docker run --env WANDB_API_KEY=${{ secrets.WANDB_API_KEY }} docker.io/${{ secrets.DOCKER_USERNAME }}/mlops-stock-price-prediction:${{ github.sha }} --cfg-path conf/config.yaml > metrics.txt

      - name: Publish CML report
        env:
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cml-send-comment metrics.txt
