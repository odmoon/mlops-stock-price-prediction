name: CI Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest dvc[runtime] ruff
          pip install -r requirements.txt

      - name: Authenticate to Google Cloud
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
        run: |
          echo "${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}" | base64 --decode > $HOME/gcloud-service-key.json
          gcloud auth activate-service-account --key-file=$HOME/gcloud-service-key.json
          gcloud config set project YOUR_PROJECT_ID

      - name: Pull DVC data
        env:
          GOOGLE_APPLICATION_CREDENTIALS: $HOME/gcloud-service-key.json
        run: |
          dvc pull

      - name: Run tests
        run: |
          PYTHONPATH=src pytest tests/

      - name: Run ruff
        run: |
          ruff check .
          ruff check --fix .
      
      - name: Push DVC data
        if: success()
        env:
          GOOGLE_APPLICATION_CREDENTIALS: $HOME/gcloud-service-key.json
        run: |
          dvc push

  build-docker:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        env:
          WANDB_API_KEY: ${{ secrets.WANDB_API_KEY }}
        run: |
          docker build --build-arg WANDB_API_KEY=${{ secrets.WANDB_API_KEY }} -t ${{ secrets.DOCKER_USERNAME }}/my-repo:latest .
      
      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/my-repo:latest

  cml-run:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install dvc cml
          pip install -r requirements.txt

      - name: Authenticate to Google Cloud
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
        run: |
          echo "${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}" > $HOME/gcloud-service-key.json
          gcloud auth activate-service-account --key-file=$HOME/gcloud-service-key.json
          gcloud config set project mlops489-426113

      - name: Pull DVC data
        env:
          GOOGLE_APPLICATION_CREDENTIALS: $HOME/gcloud-service-key.json
        run: |
          dvc pull

      - name: Run model training
        env:
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WANDB_API_KEY: ${{ secrets.WANDB_API_KEY }}
        run: |
          docker run --env WANDB_API_KEY=${{ secrets.WANDB_API_KEY }} ${{ secrets.DOCKER_USERNAME }}/my-repo:latest --cfg-path conf/config.yaml > metrics.txt

      - name: Publish CML report
        env:
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cml-send-comment metrics.txt
